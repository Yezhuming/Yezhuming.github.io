<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shadow</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yezhuming.github.io/"/>
  <updated>2020-04-10T08:10:26.019Z</updated>
  <id>https://yezhuming.github.io/</id>
  
  <author>
    <name>羽我无瓜</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nodejs Express遇到的坑</title>
    <link href="https://yezhuming.github.io/archives/81ba7b8f.html"/>
    <id>https://yezhuming.github.io/archives/81ba7b8f.html</id>
    <published>2020-04-10T07:51:38.000Z</published>
    <updated>2020-04-10T08:10:26.019Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em">做项目用Express框架搭服务端解决跨域问题的时候遇到的一个坑，app.all()竟然不生效，记录下来防止以后再犯😅</p><a id="more"></a><h1 id="解决跨域-CORS"><a href="#解决跨域-CORS" class="headerlink" title="解决跨域(CORS)"></a>解决跨域(CORS)</h1><p>在app.js中加入以下代码解决跨域问题相信大家都知道：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app.all(<span class="string">'*'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  res.setHeader(<span class="string">'Access-Control-Allow-Origin'</span>, <span class="string">'*'</span>)</span><br><span class="line">  res.setHeader(<span class="string">'Access-Control-Allow-Methods'</span>, <span class="string">'GET,PUT,POST,DELETE,OPTIONS'</span>)</span><br><span class="line">  res.setHeader(<span class="string">'Access-Control-Allow-Headers'</span>, <span class="string">'Content-type,Accept,X-Access-Token,X-Key'</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.method == <span class="string">'OPTIONS'</span>) &#123;</span><br><span class="line">    res.status(<span class="number">200</span>).end()</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    next()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>但是我却遇到了一个问题，返回的报文响应头部却没有设置的这三个字段，只有在返回数据的前面设置头部字段才生效，后来发现问题出在这段代码加入的地方。我把它放在了<code>app.use()</code>路由处理的后面了，即响应报文发出去了才设置报文头，这当然没有效果。</p><p>因为Express是按照定义的顺序执行中间件，因此只要将<code>app.all()</code>放到路由处理前面就好了<br><img src="/archives/81ba7b8f/responseHeader.jpg" alt="example"></p><p>参考资料：<a href="https://stackoverflow.com/questions/23892171/app-all-doesnt-fire-on-static-file-access" target="_blank" rel="noopener">https://stackoverflow.com/questions/23892171/app-all-doesnt-fire-on-static-file-access</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-indent:2em&quot;&gt;
做项目用Express框架搭服务端解决跨域问题的时候遇到的一个坑，app.all()竟然不生效，记录下来防止以后再犯😅
&lt;/p&gt;
    
    </summary>
    
    
      <category term="Node" scheme="https://yezhuming.github.io/tags/Node/"/>
    
      <category term="Express" scheme="https://yezhuming.github.io/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>关于浏览器中的clientWidth,offsetWidth,scrollWidth等宽度总结</title>
    <link href="https://yezhuming.github.io/archives/6b44569f.html"/>
    <id>https://yezhuming.github.io/archives/6b44569f.html</id>
    <published>2019-10-26T06:57:43.000Z</published>
    <updated>2019-10-26T09:07:32.610Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em">由于在看图片懒加载时遇到怎么判断图片进入可视窗口的问题，就总结一下在浏览器上的各种宽度问题。</p><a id="more"></a><h3 id="一、网页的各种宽度"><a href="#一、网页的各种宽度" class="headerlink" title="一、网页的各种宽度"></a>一、网页的各种宽度</h3><ul><li><p>网页可见区域宽高：<br>  <code>document.body.clientWidth</code><br>  <img src="/archives/6b44569f/%E5%85%B3%E4%BA%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84clientWidth-offsetWidth-scrollWidth%E7%AD%89%E5%AE%BD%E5%BA%A6%E6%80%BB%E7%BB%93%5Cbody.clientWidth.jpg" alt="body.clientWidth"><br>  从图中可以看出clientWidth是不包括body的边框和右侧滚动条的。<br>  <code>document.body.clientHeight</code>是整个body的高度，当然也是不包括边框的。</p><p>  <code>document.body.offsetWidth</code>包括body的边框，即offsetWidth=clientWidth+border<br>  <img src="/archives/6b44569f/%E5%85%B3%E4%BA%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84clientWidth-offsetWidth-scrollWidth%E7%AD%89%E5%AE%BD%E5%BA%A6%E6%80%BB%E7%BB%93%5Cbody.offsetWidth.jpg" alt="body.clientWidth"><br>  <code>document.body.offsetHeight</code>是整个body的高度(包括边框)。</p></li></ul><h3 id="二、元素的各种宽高"><a href="#二、元素的各种宽高" class="headerlink" title="二、元素的各种宽高"></a>二、元素的各种宽高</h3><ul><li><p>clientWidth和clientHeight：<br>元素的clientWidth和clientHeight是指元素自身的宽高。<br><img src="/archives/6b44569f/%E5%85%B3%E4%BA%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84clientWidth-offsetWidth-scrollWidth%E7%AD%89%E5%AE%BD%E5%BA%A6%E6%80%BB%E7%BB%93%5Cimg.clientWidth.jpg" alt="img.clientWidth"></p></li><li></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-indent:2em&quot;&gt;
由于在看图片懒加载时遇到怎么判断图片进入可视窗口的问题，就总结一下在浏览器上的各种宽度问题。
&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://yezhuming.github.io/tags/JavaScript/"/>
    
      <category term="元素尺寸" scheme="https://yezhuming.github.io/tags/%E5%85%83%E7%B4%A0%E5%B0%BA%E5%AF%B8/"/>
    
  </entry>
  
  <entry>
    <title>Vue学习笔记(一):v-model的原理</title>
    <link href="https://yezhuming.github.io/archives/d0572d3e.html"/>
    <id>https://yezhuming.github.io/archives/d0572d3e.html</id>
    <published>2019-07-22T08:00:15.000Z</published>
    <updated>2019-07-26T09:08:25.631Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em">本文是学习Vue过程中个人认为值得记录下来的一些笔记😅</p><a id="more"></a><h1 id="v-model原理"><a href="#v-model原理" class="headerlink" title="v-model原理"></a>v-model原理</h1><p>v-model指令可以在表单元素上创建双向数据绑定，效果如下图：<br><img src="/archives/d0572d3e/v-model.gif" alt="v-model"><br>下面详细说明一下它的原理：<br>首先它是通过在<code>&lt;input&gt;</code>标签上绑定了 value 属性等于 msg (msg是Vue实例化的data)，这时候 msg 的数据就会显示在输入框中，然后绑定一个 input 事件，该事件触发一个函数，函数的作用是修改 Vue 实例中的 msg 数据。<br>下面贴上一张我在视频教程中截取的图片：<br><img src="/archives/d0572d3e/example.png" alt="example"></p><p>总结：v-model就是通过数据驱动视图，视图修改数据的循环来实现的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-indent:2em&quot;&gt;
本文是学习Vue过程中个人认为值得记录下来的一些笔记😅
&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="https://yezhuming.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>个人博客优化历程(不定期更新)</title>
    <link href="https://yezhuming.github.io/archives/ff1c85c1.html"/>
    <id>https://yezhuming.github.io/archives/ff1c85c1.html</id>
    <published>2019-07-20T01:34:36.000Z</published>
    <updated>2019-07-26T08:54:13.583Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em">本文记录了我通过参考网上资料来配置个人博客并添加的各种功能，后期会不断更新。</p><a id="more"></a><p>博客自搭建成功后作出的修改：</p><ul><li><strong>Hexo主题的更换</strong></li><li><strong>设置站点作者、标题</strong></li><li><strong>设置社交账号</strong></li><li><strong>添加Gitalk评论系统</strong></li><li><strong>添加访问量统计功能</strong></li><li><strong>添加文章字数统计、阅读时长</strong></li><li><strong>设置头像和站点小图标</strong></li><li><strong>添加网站运行时间</strong></li><li><strong>添加鼠标点击小红心功能</strong></li></ul><h1 id="一、Hexo主题的更换😘"><a href="#一、Hexo主题的更换😘" class="headerlink" title="一、Hexo主题的更换😘"></a>一、Hexo主题的更换😘</h1><p>首先我在这里放上一个知乎的回答：<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">https://www.zhihu.com/question/24422335</a><br>里面有许多非常好看的主题，大家可以在里面挑一个自己喜欢的，或者可以去<a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo主题官网</a>上面找。<br>下面开始进入正题，我使用的是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">yilia主题</a>，崇尚简约优雅，以及极致的性能。</p><h3 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1.下载主题"></a>1.下载主题</h3><p>首先我们先在命令行窗口进入blog文件夹，并输入以下命令来下载主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><h3 id="2-配置文件"><a href="#2-配置文件" class="headerlink" title="2.配置文件"></a>2.配置文件</h3><p>然后修改Hexo根目录的_config.yml文件中的theme: yilia(默认为landscape)<br><img src="/archives/ff1c85c1/hexo_theme.png" alt="hexo_theme"></p><hr><p><i class="fa fa-calendar"></i>：2019-7-19</p><h1 id="二、设置站点作者、标题😘"><a href="#二、设置站点作者、标题😘" class="headerlink" title="二、设置站点作者、标题😘"></a>二、设置站点作者、标题😘</h1><p>打开站点配置文件(blog文件夹目录下的_config.yml)<br><img src="/archives/ff1c85c1/hexo_site.png" alt="hexo_site"><br>各参数含义：<br>title: 网站的标题<br>subtitle: 网站的副标题<br>description: 网站的概述<br>keywords: 关键词<br>author: 网站的作者</p><hr><p><i class="fa fa-calendar"></i>：2019-7-19</p><h1 id="三、设置头像和站点小图标😘"><a href="#三、设置头像和站点小图标😘" class="headerlink" title="三、设置头像和站点小图标😘"></a>三、设置头像和站点小图标😘</h1><p>由于设置路径的根目录为：<code>/blog/source/</code>，因此把头像等图片放在<code>/blog/source/img/</code>下(自己创建img文件夹)。<br>打开主题配置文件(/themes/yilia下的_config.yml)<br><img src="/archives/ff1c85c1/hexo_head.png" alt="hexo_head"><br>favicon: 是网站标题旁边的小图标</p><hr><p><i class="fa fa-calendar"></i>：2019-7-19：2019-7-19</p><h1 id="四、设置社交账号😘"><a href="#四、设置社交账号😘" class="headerlink" title="四、设置社交账号😘"></a>四、设置社交账号😘</h1><p>在主题配置文件中找到==subnav==，修改相关的内容。<br><img src="/archives/ff1c85c1/yilia_subnav.png" alt="yilia_subnav"><br>github: 放上自己的github主页</p><p>mail: 打开自己的qq邮箱，点击页面下方的开放平台<br><img src="/archives/ff1c85c1/qqemail.png" alt="qqemail"><br>进入开放平台后点击右上方自己的名字并点击”获取邮我按钮”<br><img src="/archives/ff1c85c1/qqmailme.png" alt="qqmailme"><br>随意选取一种尺寸后点击”获取代码”<br><img src="/archives/ff1c85c1/mailme_href.png" alt="mailme_href"><br>复制代码中的href到主题配置文件中的mail后，在自己博客点击邮件按钮后会打开一个新窗口。<br><img src="/archives/ff1c85c1/mailme.png" alt="mailme"><br>在这个窗口别人登录自己的qq就可以发邮件给你了。</p><hr><p><i class="fa fa-calendar"></i>：2019-7-19</p><h1 id="五、添加评论系统😘"><a href="#五、添加评论系统😘" class="headerlink" title="五、添加评论系统😘"></a>五、添加评论系统😘</h1><p>网上有很多评论系统可以使用，我自己的博客是用了Gitalk。<br>Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。<br>Gitalk主页：<a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md" target="_blank" rel="noopener">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a></p><h3 id="1-github的相关配置"><a href="#1-github的相关配置" class="headerlink" title="1.github的相关配置"></a>1.github的相关配置</h3><ol><li>我们先在github创建一个仓库来存储我们的评论，创建仓库很简单就不细说了。</li><li>创建完后还要申请GitHub Application：点击右上角头像- Settings - Developer settings - OAuth Apps - New OAuth App<br><img src="/archives/ff1c85c1/OAuth_NewApp.png" alt="OAuth_NewApp"></li><li>把你自己得到的ClientID和Client Secret复制下来<br><img src="/archives/ff1c85c1/OAuth_Client.png" alt="OAuth_Client"></li></ol><h3 id="2-添加相关代码"><a href="#2-添加相关代码" class="headerlink" title="2.添加相关代码"></a>2.添加相关代码</h3><p>在 <code>/blog/themes/yilia/layout/_partial/post</code> 下创建一个gitalk.ejs文件并写入一下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"gitalk-container"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js"</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"gitalk-container"</span> style=<span class="string">"width: 1160px;margin-left: 30px;"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">        clientID: <span class="string">'6bee0c40c2186cd3d721'</span>,  <span class="comment">//粘贴刚刚复制的ClientID</span></span><br><span class="line">        clientSecret: <span class="string">'a97ade95a44b2f392276fb1a80953cd65a250482'</span>,  <span class="comment">//粘贴刚刚复制的Client Secret</span></span><br><span class="line">        repo: <span class="string">'gitalk-comments'</span>,  <span class="comment">//第一步创建的仓库名</span></span><br><span class="line">        owner: <span class="string">'yezhuming'</span>,  <span class="comment">//填自己的github用户名</span></span><br><span class="line">        admin: [<span class="string">'yezhuming'</span>],  <span class="comment">//管理者，同上</span></span><br><span class="line">        id: md5(location.pathname),  <span class="comment">//唯一标识页面的ID</span></span><br><span class="line">        pagerDirection: <span class="string">'first'</span>,  <span class="comment">//评论正序</span></span><br><span class="line">        distractionFreeMode: <span class="literal">true</span>,  <span class="comment">//专注模式</span></span><br><span class="line">        createIssueManually: <span class="literal">false</span>  <span class="comment">//如果当前页面没有相应的 isssue 且登录的用户属于 admin，则会自动创建 issue。</span></span><br><span class="line">        <span class="comment">//注意：这里只是部分参数，其他参数有需要的可以去Gitalk主页找。</span></span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    gitalk.render(<span class="string">'gitalk-container'</span>)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>/blog/themes/yilia/layout/_partial/article.ejs</code> 文件中找到<code>&lt;% if (!index &amp;&amp; post.comments){ %&gt;</code>，在其下面添加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span>(theme.gitalk.enable)&#123; %&gt;</span><br><span class="line">      &lt;%- partial(<span class="string">'post/gitalk'</span>, &#123;</span><br><span class="line">      key: post.slug,</span><br><span class="line">      title: post.title,</span><br><span class="line">      url: config.url+url_for(post.path)</span><br><span class="line">    &#125;) %&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>若成功添加评论系统的话在文章的最下方会有下图的效果：<br><img src="/archives/ff1c85c1/gitalk.png" alt="gitalk"></p><hr><p><i class="fa fa-calendar"></i>：2019-7-19</p><h1 id="六、添加访问量统计功能"><a href="#六、添加访问量统计功能" class="headerlink" title="六、添加访问量统计功能"></a>六、添加访问量统计功能</h1><p>访问量统计用的是<a href="http://ibruce.info/2015/04/04/busuanzi/#more" target="_blank" rel="noopener">不蒜子</a></p><h3 id="1、开启不蒜子访问量统计功能"><a href="#1、开启不蒜子访问量统计功能" class="headerlink" title="1、开启不蒜子访问量统计功能"></a>1、开启不蒜子访问量统计功能</h3><p>在主题配置文件中添加属性：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 访问量统计功能(不蒜子)</span><br><span class="line">busuanzi:</span><br><span class="line">  enable: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="2、引入不蒜子并添加站点访问量"><a href="#2、引入不蒜子并添加站点访问量" class="headerlink" title="2、引入不蒜子并添加站点访问量"></a>2、引入不蒜子并添加站点访问量</h3><p>在 <code>themes/yilia/layout/_partial/footer.ejs</code> 末尾添加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 不蒜子统计 --&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"//cdn.bootcss.com/font-awesome/4.3.0/css/font-awesome.min.css"</span>&gt;</span><br><span class="line">  &lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span><br><span class="line">  本站总访问量&lt;span id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;i class="fa fa-spinner fa-spin"&gt;&lt;/i&gt;&lt;/span&gt;次</span><br><span class="line">&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;span class="post-meta-divider"&gt;|&lt;/</span>span&gt;</span><br><span class="line">    &lt;span id=<span class="string">"busuanzi_container_site_uv"</span> style=<span class="string">'display:none'</span>&gt;</span><br><span class="line">        本站访客数&lt;span id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;i class="fa fa-spinner fa-spin"&gt;&lt;/i&gt;&lt;/span&gt;人</span><br><span class="line">    &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script async src="/</span><span class="regexp">/busuanzi.ibruce.info/</span>busuanzi/<span class="number">2.3</span>/busuanzi.pure.mini.js<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/archives/ff1c85c1/busuanzi_site.png" alt="busuanzi_site"></p><h3 id="3、添加文章阅读数"><a href="#3、添加文章阅读数" class="headerlink" title="3、添加文章阅读数"></a>3、添加文章阅读数</h3><p>在<code>themes/yilia/layout/_partial/post/date.ejs</code>开头添加如下代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.busuanzi &amp;&amp; theme.busuanzi.enable &amp;&amp; !index)&#123; %&gt;</span><br><span class="line">        &lt;!-- 不蒜子统计 --&gt;</span><br><span class="line">        &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"//cdn.bootcss.com/font-awesome/4.3.0/css/font-awesome.min.css"</span>&gt;</span><br><span class="line">        &lt;span id=<span class="string">"busuanzi_container_page_pv"</span> style=<span class="string">'display:none'</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"&lt;%= class_name %&gt;"</span>&gt;</span><br><span class="line">              &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-smile icon"</span>&gt;&lt;/i&gt; 阅读数：&lt;span id=<span class="string">"busuanzi_value_page_pv"</span>&gt;&lt;i class="fa fa-spinner fa-spin"&gt;&lt;/i&gt;&lt;/span&gt;次</span><br><span class="line">        &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/archives/ff1c85c1/busuanzi_page.png" alt="busuanzi_page"></p><hr><p><i class="fa fa-calendar"></i>：2019-7-20</p><h1 id="七、添加文章字数统计、阅读时长"><a href="#七、添加文章字数统计、阅读时长" class="headerlink" title="七、添加文章字数统计、阅读时长"></a>七、添加文章字数统计、阅读时长</h1><h3 id="1、安装-hexo-wordcount"><a href="#1、安装-hexo-wordcount" class="headerlink" title="1、安装 hexo-wordcount"></a>1、安装 hexo-wordcount</h3><p>在命令行窗口进入blog文件夹，并执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -i --save hexo-wordcount</span><br></pre></td></tr></table></figure><h3 id="2、添加相关代码"><a href="#2、添加相关代码" class="headerlink" title="2、添加相关代码"></a>2、添加相关代码</h3><p>在 <code>themes/yilia/layout/_partial/post</code> 下创建 word.ejs 文件并添加以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-top:10px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-time"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-keyboard-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>  字数统计: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-count"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">wordcount</span>(<span class="attr">post.content</span>) %&gt;</span>字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-time"</span>&gt;</span></span><br><span class="line">      &amp;nbsp; | &amp;nbsp;</span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clock-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>  阅读时长: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-count"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">min2read</span>(<span class="attr">post.content</span>) %&gt;</span>分<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在 <code>themes/yilia/layout/_partial/article.ejs</code> 中添加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 字数统计--&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span>(theme.word_count &amp;&amp; !post.no_word_count)&#123;%&gt;</span><br><span class="line">&lt;%- partial(<span class="string">'post/word'</span>) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p><img src="/archives/ff1c85c1/wordcount.png" alt="wordcount"></p><h3 id="3、功能开启"><a href="#3、功能开启" class="headerlink" title="3、功能开启"></a>3、功能开启</h3><p>在站点配置文件中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## 是否开启字数统计</span><br><span class="line">## 不需要使用，直接设置值为false，或注释掉</span><br><span class="line">word_count: true</span><br></pre></td></tr></table></figure><hr><p><i class="fa fa-calendar"></i>：2019-7-20</p><h1 id="八、添加网站运行时间"><a href="#八、添加网站运行时间" class="headerlink" title="八、添加网站运行时间"></a>八、添加网站运行时间</h1><p>在 <code>hexo/themes/yelee/layout/_partial/footer.ejs</code> 文件中 <code>&lt;div class=&quot;footer-left&quot;&gt;</code>内(位置可以自己更改)添加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=<span class="string">"timeDate"</span>&gt;载入天数...&lt;<span class="regexp">/span&gt;&lt;span id="times"&gt;载入时分秒...&lt;/</span>span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createtime</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line"><span class="keyword">var</span> grt= <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"11/23/2018 20:00:00"</span>);  <span class="comment">//此处修改你的建站时间:月/日/年 24小时制</span></span><br><span class="line">now.setTime(now.getTime()+<span class="number">250</span>); </span><br><span class="line">days = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>; dnum = <span class="built_in">Math</span>.floor(days); </span><br><span class="line">hours = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * dnum); hnum = <span class="built_in">Math</span>.floor(hours); </span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">String</span>(hnum).length ==<span class="number">1</span> )&#123;hnum = <span class="string">"0"</span> + hnum;&#125; minutes = (now - grt ) / <span class="number">1000</span> /<span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * hnum); </span><br><span class="line">mnum = <span class="built_in">Math</span>.floor(minutes); <span class="keyword">if</span>(<span class="built_in">String</span>(mnum).length ==<span class="number">1</span> )&#123;mnum = <span class="string">"0"</span> + mnum;&#125; </span><br><span class="line">seconds = (now - grt ) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * <span class="number">60</span> * hnum) - (<span class="number">60</span> * mnum); </span><br><span class="line">snum = <span class="built_in">Math</span>.round(seconds); <span class="keyword">if</span>(<span class="built_in">String</span>(snum).length ==<span class="number">1</span> )&#123;snum = <span class="string">"0"</span> + snum;&#125; </span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"timeDate"</span>).innerHTML = <span class="string">"本站已安全运行 "</span>+dnum+<span class="string">" 天 "</span>; </span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"times"</span>).innerHTML = hnum + <span class="string">" 小时 "</span> + mnum + <span class="string">" 分 "</span> + snum + <span class="string">" 秒"</span>; </span><br><span class="line">&#125; </span><br><span class="line">setInterval(<span class="string">"createtime()"</span>,<span class="number">250</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><hr><p><i class="fa fa-calendar"></i>：2019-7-20</p><h1 id="九、添加鼠标点击小红心功能"><a href="#九、添加鼠标点击小红心功能" class="headerlink" title="九、添加鼠标点击小红心功能"></a>九、添加鼠标点击小红心功能</h1><h3 id="1、添加生成小红心的代码"><a href="#1、添加生成小红心的代码" class="headerlink" title="1、添加生成小红心的代码"></a>1、添加生成小红心的代码</h3><p>在 <code>blog/themes/yilia/source</code> 文件目录下创建 <code>love.js</code> 文件并添加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e, t, a</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; s.length; e++)</span><br><span class="line">            s[e].alpha &lt;= <span class="number">0</span> ? (t.body.removeChild(s[e].el),</span><br><span class="line">            s.splice(e, <span class="number">1</span>)) : (s[e].y--,</span><br><span class="line">            s[e].scale += <span class="number">.004</span>,</span><br><span class="line">            s[e].alpha -= <span class="number">.013</span>,</span><br><span class="line">            s[e].el.style.cssText = <span class="string">"left:"</span> + s[e].x + <span class="string">"px;top:"</span> + s[e].y + <span class="string">"px;opacity:"</span> + s[e].alpha + <span class="string">";transform:scale("</span> + s[e].scale + <span class="string">","</span> + s[e].scale + <span class="string">") rotate(45deg);background:"</span> + s[e].color + <span class="string">";z-index:99999"</span>);</span><br><span class="line">        requestAnimationFrame(r)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = <span class="string">"function"</span> == <span class="keyword">typeof</span> e.onclick &amp;&amp; e.onclick;</span><br><span class="line">        e.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            t &amp;&amp; t(),</span><br><span class="line">            o(e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = t.createElement(<span class="string">"div"</span>);</span><br><span class="line">        a.className = <span class="string">"heart"</span>,</span><br><span class="line">        s.push(&#123;</span><br><span class="line">            el: a,</span><br><span class="line">            x: e.clientX - <span class="number">5</span>,</span><br><span class="line">            y: e.clientY - <span class="number">5</span>,</span><br><span class="line">            scale: <span class="number">1</span>,</span><br><span class="line">            alpha: <span class="number">1</span>,</span><br><span class="line">            color: c()</span><br><span class="line">        &#125;),</span><br><span class="line">        t.body.appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = t.createElement(<span class="string">"style"</span>);</span><br><span class="line">        a.type = <span class="string">"text/css"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            a.appendChild(t.createTextNode(e))</span><br><span class="line">        &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">            a.styleSheet.cssText = e</span><br><span class="line">        &#125;</span><br><span class="line">        t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"rgb("</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">")"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> s = [];</span><br><span class="line">    e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        setTimeout(e, <span class="number">1e3</span> / <span class="number">60</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    i(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),</span><br><span class="line">    n(),</span><br><span class="line">    r()</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><h3 id="2、引入love-js文件"><a href="#2、引入love-js文件" class="headerlink" title="2、引入love.js文件"></a>2、引入<code>love.js</code>文件</h3><p>在 <code>blog/themes/yilia/layout/_partial/footer.ejs</code> 文件的最后， 添加以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--页面点击小红心--&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/love.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><hr><p><i class="fa fa-calendar"></i>：2019-7-20</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-indent:2em&quot;&gt;
本文记录了我通过参考网上资料来配置个人博客并添加的各种功能，后期会不断更新。
&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://yezhuming.github.io/tags/Hexo/"/>
    
      <category term="博客优化" scheme="https://yezhuming.github.io/tags/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建教程(Hexo+github)</title>
    <link href="https://yezhuming.github.io/archives/2b457aec.html"/>
    <id>https://yezhuming.github.io/archives/2b457aec.html</id>
    <published>2019-07-18T16:03:40.000Z</published>
    <updated>2019-07-25T11:46:46.450Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em">不知为何突然就想搭个博客玩玩，在网上找了许多资料后决定用Hexo去搭建自己的个人博客，然后部署到Github上,一路上磕磕碰碰，但是还好完成了。本文详细记录了搭建博客的每个步骤，对博客的搭建进行一个全面的总结。</p><p style="text-indent:2em">本文步骤较为详细，所以字数较多，目录在页面的右下方,想搭博客的人请耐心阅读哦 []~(￣▽￣)~*</p><a id="more"></a><h1 id="一、Hexo的介绍"><a href="#一、Hexo的介绍" class="headerlink" title="一、Hexo的介绍"></a>一、Hexo的介绍</h1><p>首先贴上Hexo的官网：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a>  </p><h2 id="1-1-Hexo的特点"><a href="#1-1-Hexo的特点" class="headerlink" title="1.1 Hexo的特点"></a>1.1 Hexo的特点</h2><p>Hexo是一个快速、简洁且高效的博客框架,它拥有以下几个特点：</p><ul><li>超快速度：Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li><li>支持 Markdown：Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</li><li>一键部署：只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。</li><li>丰富的插件：Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</li></ul><h2 id="1-2-Hexo的工作机制"><a href="#1-2-Hexo的工作机制" class="headerlink" title="1.2 Hexo的工作机制"></a>1.2 Hexo的工作机制</h2><p>Hexo基于Node.js，将/source文件夹下的资源(文章，图片，模板)，按照预定的配置文件，转换成静态页面放置到/public目录下。如果需要预览或者部署，hexo会把public作为web目录处理。</p><p>至于Hexo的使用会在下面作详细介绍 </p><h1 id="二、搭建博客第一步：安装相关环境"><a href="#二、搭建博客第一步：安装相关环境" class="headerlink" title="二、搭建博客第一步：安装相关环境"></a>二、搭建博客第一步：安装相关环境</h1><h2 id="2-1-安装Node-js"><a href="#2-1-安装Node-js" class="headerlink" title="2.1 安装Node.js"></a>2.1 安装Node.js</h2><p>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。<br>Node.js 安装包及源码下载地址为：<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/</a><br>在上面提供的网站上选择一个适合自己系统的安装包下载，安装过程除了目录可能需要修改(默认是装在C盘的)，其他基本就是一直Next下去直到安装完成。<br>安装完成后可以通过按Win+R并在输入框中输入cmd打开命令行窗口，并在里面输入“node -v”来测试是否安装成功。<br>命令如下，出现版本提示表示安装成功:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p><img src="/archives/2b457aec/cmd_node.png" alt="cmd_node"></p><p>因为后续需要用npm安装模块，但是国内直接使用 npm 的官方镜像是非常慢的，所以我使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>这样就可以使用 cnpm 命令代替 npm 来安装模块了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install [name]</span><br></pre></td></tr></table></figure><p>Node.js的安装遇到问题可以参考<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">菜鸟教程</a></p><h2 id="2-2-安装Git"><a href="#2-2-安装Git" class="headerlink" title="2.2 安装Git"></a>2.2 安装Git</h2><p>Git是一个免费的开源分布式版本控制系统，旨在快速高效地处理从小型到大型项目的所有事务。<br>Git的下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a><br>Git的安装过程也非常简单，这里就不详细说明。<br>安装完成后同样的在命令行窗口输入“git –version”来测试Git是否安装成功。<br><img src="/archives/2b457aec/cmd_git.png" alt="cmd_git"><br>Git的使用会在后续步骤详细说明！</p><h2 id="2-3-安装Hexo"><a href="#2-3-安装Hexo" class="headerlink" title="2.3 安装Hexo"></a>2.3 安装Hexo</h2><p>首先在这里放上Hexo的官方文档：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a> ，在安装Hexo过程中遇到问题可以参考官方文档。<br>在自己合适的地方创建一个文件夹命名为Hexo，这里我以自己的Hexo文件夹为例子说明(E:\Hexo)。<br>创建文件夹后再命令行窗口进入该文件夹<br><img src="/archives/2b457aec/cmd_cdhexo.png" alt="cmd_cdhexo"><br>在命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>然后等待hexo安装完成。<br>在命令行输入以下命令测试hexo是否安装成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h1 id="三、搭建博客第二步：Hexo的建站"><a href="#三、搭建博客第二步：Hexo的建站" class="headerlink" title="三、搭建博客第二步：Hexo的建站"></a>三、搭建博客第二步：Hexo的建站</h1><p>安装完Hexo后我们需要执行以下命令来初始化博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br></pre></td></tr></table></figure><p>folder是我们自己设置的文件夹名字，我是设置为blog，所以上述命令为”hexo init blog”。<br>然后在命令行进入blog文件夹，并执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>这个命令会为我们把需要用到的包安装在blog文件夹中的node_modules(上一条命令生成)中。<br>至此我们的博客也算是搭成功一半了，我们可以在命令行输入以下命令(也是在blog文件夹中执行，后续的命令都是在blog中执行的)来启动服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="/archives/2b457aec/cmd_hexo-s.png" alt="cmd_hexo-s"></p><p>然后我们就可以在浏览器中输入”<a href="http://localhost:4000&quot;来看下我们搭起来的博客。" target="_blank" rel="noopener">http://localhost:4000&quot;来看下我们搭起来的博客。</a><br><img src="/archives/2b457aec/Hexo.png" alt="Hexo"></p><h1 id="四、搭建博客第三步：将博客部署到gitHub"><a href="#四、搭建博客第三步：将博客部署到gitHub" class="headerlink" title="四、搭建博客第三步：将博客部署到gitHub"></a>四、搭建博客第三步：将博客部署到gitHub</h1><h2 id="4-1-配置git"><a href="#4-1-配置git" class="headerlink" title="4.1 配置git"></a>4.1 配置git</h2><p>首先我们需要在开始菜单中找到Git Bash并打开<br><img src="/archives/2b457aec/gitbash.png" alt="gitbash"><br>并且在打开的窗口中执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;&quot;</span><br><span class="line">git config --global user.email  &quot;&quot;</span><br><span class="line">//在双引号中输入你自己的用户名和邮箱，我是设置了github用户名和qq邮箱</span><br></pre></td></tr></table></figure><p>然后我们需要配置SSH Key，这样我们通过git提交代码时不需要验证用户名和密码。<br>首先我们需要执行以下命令检查是否存在SSH Key：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">dir</span><br><span class="line">//看是否存在 id_rsa 和 id_rsa.pub 文件，如果存在，说明已经有SSH Key,不需要再次生成</span><br></pre></td></tr></table></figure><p>如下图<br><img src="/archives/2b457aec/gitbash_sshkey.png" alt="sshkey"></p><p>如果没有的话则需要先生成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;user.email&quot;</span><br><span class="line">//user.email是刚刚配置的那个</span><br></pre></td></tr></table></figure><p>然后获取SSH Key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub</span><br><span class="line">//拷贝秘钥</span><br></pre></td></tr></table></figure><p>如下图<br><img src="/archives/2b457aec/cat_sshkey.png" alt="cat_sshkey"></p><h2 id="4-2-github的注册与配置"><a href="#4-2-github的注册与配置" class="headerlink" title="4.2 github的注册与配置"></a>4.2 github的注册与配置</h2><p>github官网：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p><h3 id="4-2-1-注册github"><a href="#4-2-1-注册github" class="headerlink" title="4.2.1 注册github"></a>4.2.1 注册github</h3><p>github的注册很简单，点击上面的链接输入用户名，邮箱和密码就可以了。</p><h3 id="4-2-2-github的配置"><a href="#4-2-2-github的配置" class="headerlink" title="4.2.2 github的配置"></a>4.2.2 github的配置</h3><p>注册完成功登进去后点击右上角人物头像，点击”settings”，并点击”SSH and GPG keys”，操作如下图<br><img src="/archives/2b457aec/github_settings.png" alt="github_settings"><br><img src="/archives/2b457aec/github_settings-sshkey.png" alt="github_settings-sshkey"><br><img src="/archives/2b457aec/github_add-sshkey.png" alt="github_add-sshkey"></p><p>然后点击页面右上角的+号，点击”New repository”新建一个仓库。<br>如下图<br><img src="/archives/2b457aec/github_new-repo.png" alt="github_new-repo"><br><img src="/archives/2b457aec/github_repo-name.png" alt="github_repo-name"></p><p>注意：图中仓库名必须设置为”用户名.github.io”，因为这个是以后访问我们博客的地址。(我的github已经存在该名字的仓库所以报错)</p><h2 id="4-3-Hexo的配置"><a href="#4-3-Hexo的配置" class="headerlink" title="4.3 Hexo的配置"></a>4.3 Hexo的配置</h2><p>最后一步就是要对我们刚刚生成的博客进行配置，让它通过git方式把代码提交到github的仓库，那样子我们就可以通过”用户名.github.io”来访问我们的博客了。</p><ol><li>找到我们的blog文件夹，打开_config.yml文件(我是用VS Code打开的)<br><img src="/archives/2b457aec/hexo_config.png" alt="hexo_config"></li><li>直接跳到最后找到”#Deployment”<br><img src="/archives/2b457aec/hexo_config-deployment.png" alt="hexo_config-deployment"><br>注意：repo要填上自己仓库的ssh，如下图<br><img src="/archives/2b457aec/github_clonessh.png" alt="github_clonessh"><br>这些步骤都完成后我们就可以通过访问”https://用户名.github.io”来访问博客了。</li></ol><h1 id="五、搭建博客第四步：写第一篇博客"><a href="#五、搭建博客第四步：写第一篇博客" class="headerlink" title="五、搭建博客第四步：写第一篇博客"></a>五、搭建博客第四步：写第一篇博客</h1><p>博客搭建完成了当然要写一篇博客来庆祝一下啦，下面将会详细说明如何在本地写一篇文章并部署到github。</p><ol><li><p>首先我们先在命令行窗口进入到我们的blog文件夹，并执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;title&quot; //title为文章的标题</span><br></pre></td></tr></table></figure><p> 然后就可以在 E:\Hexo\blog\source\_posts 中看到title.md文件。</p></li><li><p>用Markdown编辑器打开title.md文件进行编辑(例如用VS Code)，编辑完成保存后先执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">//安装部署所需的依赖包</span><br></pre></td></tr></table></figure></li></ol><p>然后继续执行生成和部署命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g //g为generate,生成静态文件</span><br><span class="line">hexo d //d为deploy，部署到github</span><br><span class="line">//以上两条命令可用一条命令代替</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p><img src="/archives/2b457aec/article_deploy.png" alt="article_deploy.png"><br>然后就可以通过博客地址(https://用户名.github.io)来访问我们的博客，并看到刚刚编辑的文章已经发布在上面了。</p><hr><p>至此我们的博客总算是搭建成功并可以正常发布文章了，感谢看到这里的每一个人ヽ(ﾟ∀ﾟ)ﾒ(ﾟ∀ﾟ)ﾉ </p><p>第一次写博客，要有什么错误可以在文章下方留言指出哦，我看到会立马修改的&lt;(＿ ＿)&gt;</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-indent:2em&quot;&gt;
不知为何突然就想搭个博客玩玩，在网上找了许多资料后决定用Hexo去搭建自己的个人博客，然后部署到Github上,一路上磕磕碰碰，但是还好完成了。本文详细记录了搭建博客的每个步骤，对博客的搭建进行一个全面的总结。
&lt;/p&gt;
&lt;p style=&quot;text-indent:2em&quot;&gt;
本文步骤较为详细，所以字数较多，目录在页面的右下方,想搭博客的人请耐心阅读哦 []~(￣▽￣)~*
&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://yezhuming.github.io/tags/Hexo/"/>
    
      <category term="博客搭建" scheme="https://yezhuming.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="github" scheme="https://yezhuming.github.io/tags/github/"/>
    
  </entry>
  
</feed>
